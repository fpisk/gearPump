/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  12
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       volVectorField;
    location    "0";
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [ 0 1 -1 0 0 0 0 ];

internalField   uniform ( 0 0 0 );

boundaryField
{
    cyclic
    {
        type            cyclic;
    }
    cyclicSlip
    {
        type            cyclicSlip;
    }
    nonConformalCyclic
    {
        type            nonConformalCyclic;
        value           uniform ( 0 0 0 );
    }
    nonConformalError
    {
        type            nonConformalError;
    }
    empty
    {
        type            empty;
    }
    processor
    {
        type            processor;
        value           uniform ( 0 0 0 );
    }
    processorCyclic
    {
        type            processorCyclic;
        value           uniform ( 0 0 0 );
    }
    nonConformalProcessorCyclic
    {
        type            nonConformalProcessorCyclic;
        value           uniform ( 0 0 0 );
    }
    symmetryPlane
    {
        type            symmetryPlane;
    }
    symmetry
    {
        type            symmetry;
    }
    wedge
    {
        type            wedge;
    }
    internal
    {
        type            internal;
    }
    inlet
    {
        type            pressureInletOutletVelocity;
        value           uniform ( 0 0 0 );
    }
    outlet
    {
        type            pressureInletOutletVelocity;
        value           uniform ( 0 0 0 );
    }
    "(gear.*)"
    {
        type            movingWallVelocity;
        value           uniform ( 0 0 0 );
    }
    wall
    {
        type            zeroGradient;
    }
    frontAndBack
    {
        type            empty;
    }
    "nonCouple.*"
    {
        type            slip;
    }
}


// ************************************************************************* //
